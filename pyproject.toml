[tool.poetry]
name = "software-gardening-almanac"
version = "0.0.1"
description = "An open-source handbook of applied guidance and tools for sustainable software development and maintenance."
authors = ["Software Gardening Community"]
license = "BSD-3-Clause"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
jupyter-book = "^1.0.0"

[tool.poetry.group.dev.dependencies]
poethepoet = "^0.25.0"
pytest = "^8.1.1"
cffconvert = "^2.0.0"
linkchecker = "^10.4.0"
vale = "^3.3.1.0"
pyppeteer = "^2.0.0"

[tool.isort]
profile = "black"

[tool.bandit]
exclude_dirs = ["tests"]

# defines poe the poet tasks
[tool.poe.tasks]
# builds the jupyter book related to this project
build-book.shell = """
  jupyter-book build src/almanac
"""
# build a PDF from the HTML content
build-book-pdf.shell = """
  jupyter-book build src/almanac --builder pdfhtml
"""
# builds the jupyter book related to this project and opens a new browser window
build-book-dev.shell = """
  jupyter-book build src/almanac && \
  python -m webbrowser -t "file://$PWD/src/almanac/_build/html/index.html"
"""
# syncs and runs vale relative to this project
# through pre-commit to trigger warnings as
# non-zero return when there is more than one
# line of output from vale.
vale-checks.shell = """
vale sync || true;
output=$(vale ./src/almanac) ||
if [ $(echo "$output" | wc -l) -gt 1 ]; then
echo "$output"; exit 1;
fi
"""

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.setuptools_scm]
root = "."
